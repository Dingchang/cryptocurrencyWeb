<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>

<h2>Listing Currencies</h2>

<table class="table">
  <thead>
    <tr>
      <th>Name</th>

      <th></th>
    </tr>
  </thead>
  <tbody>

<%= for currency <- @currencies do %>
    <tr>
      <td><%= currency.name %></td>

      <td class="text-right">
        <span><%= link "Show", to: currency_path(@conn, :show, currency), class: "btn btn-default btn-xs" %></span>
        <span><%= link "Edit", to: currency_path(@conn, :edit, currency), class: "btn btn-default btn-xs" %></span>
        <span><%= link "Delete", to: currency_path(@conn, :delete, currency), method: :delete, data: [confirm: "Are you sure?"], class: "btn btn-danger btn-xs" %></span>
      </td>
    </tr>
<% end %>
  </tbody>
</table>

<span><%= link "New Currency", to: currency_path(@conn, :new) %></span>

<canvas id="BTCChart"></canvas>

<canvas id="LTCChart"></canvas>

<canvas id="ETHChart"></canvas>

<script>
  function draw_prices(currency)
  {   
      // define GET request for API
      var xmlHttp = new XMLHttpRequest();
      xmlHttp.open( "GET", "api/prices?currency=" + currency, true); // true for asynchronous request
      xmlHttp.send( null );

      // define callback for when api call completes
      xmlHttp.onreadystatechange = function() {
        if (xmlHttp.readyState == 4) {
          if (xmlHttp.status == 200) {

            // parse out data into a list of prices and a list of dates so we can put them in the graph
            var prices_and_dates = JSON.parse(xmlHttp.responseText);
            var prices = [];
            var dates = [];

            for (i = 0; i < prices_and_dates.length; i++) {
              prices.push(prices_and_dates[i].price);
              dates.push(prices_and_dates[i].date);
            }

            // use chart.js to draw the actual chart
            var ctx = document.getElementById(currency + 'Chart').getContext('2d');
            var chart = new Chart(ctx, {
                // The type of chart we want to create
                type: 'line',

                // The data for our dataset
                data: {
                    labels: dates,
                    datasets: [{
                        label: currency + " Price Chart",
                        backgroundColor: 'rgb(255, 99, 132)',
                        borderColor: 'rgb(255, 99, 132)',
                        data: prices,
                    }]
                },

                // Configuration options go here
                options: {}
            });
          }
        }
      }
  }

  draw_prices("BTC");
  draw_prices("ETH");
  draw_prices("LTC");

</script>
